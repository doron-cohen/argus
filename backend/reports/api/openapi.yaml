openapi: 3.0.3
info:
  title: Argus Reports API
  version: 0.1.0
  description: API for submitting quality check reports for components
paths:
  /reports:
    post:
      summary: Submit a quality check report
      description: Submit a report for a quality check performed on a component
      operationId: submitReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportSubmission"
            examples:
              unit_test_report:
                summary: Unit Test Report
                description: Example of a unit test report submission
                value:
                  check_slug: "unit-tests"
                  component_id: "auth-service"
                  status: "pass"
                  timestamp: "2024-01-15T10:30:00Z"
                  details:
                    coverage_percentage: 85.5
                    tests_passed: 150
                    tests_failed: 0
                    duration_seconds: 45
                  metadata:
                    ci_job_id: "12345"
                    environment: "staging"
                    branch: "main"
                    commit_sha: "abc123"
                    execution_duration_ms: 45000
              build_report:
                summary: Build Report
                description: Example of a build report submission
                value:
                  check_slug: "build"
                  component_id: "auth-service"
                  status: "pass"
                  timestamp: "2024-01-15T10:35:00Z"
                  details:
                    build_duration_seconds: 120
                    artifact_size_mb: 15.2
                    dependencies_count: 45
                  metadata:
                    ci_job_id: "12346"
                    environment: "production"
                    branch: "main"
                    commit_sha: "abc123"
                    execution_duration_ms: 120000
      responses:
        "200":
          description: Report submitted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportSubmissionResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    ReportSubmission:
      type: object
      description: A quality check report submission
      properties:
        check_slug:
          type: string
          description: Unique identifier for the check type (e.g., "unit-tests", "build", "linter")
          example: "unit-tests"
          minLength: 1
          maxLength: 100
        component_id:
          type: string
          description: Unique identifier of the component being reported on
          example: "auth-service"
          minLength: 1
          maxLength: 255
        status:
          type: string
          description: Status of the check execution
          enum:
            [
              "pass",
              "fail",
              "disabled",
              "skipped",
              "unknown",
              "error",
              "completed",
            ]
          example: "pass"
        timestamp:
          type: string
          format: date-time
          description: When the check was executed
          example: "2024-01-15T10:30:00Z"
        details:
          type: object
          description: Check-specific data (coverage %, warnings, etc.)
          additionalProperties: true
          example:
            coverage_percentage: 85.5
            tests_passed: 150
            tests_failed: 0
            duration_seconds: 45
        metadata:
          type: object
          description: Execution context (CI job, environment, duration)
          additionalProperties: true
          example:
            ci_job_id: "12345"
            environment: "staging"
            branch: "main"
            commit_sha: "abc123"
            execution_duration_ms: 45000
      required:
        - check_slug
        - component_id
        - status
        - timestamp

    ReportSubmissionResponse:
      type: object
      description: Response to a successful report submission
      properties:
        message:
          type: string
          description: Success message
          example: "Report submitted successfully"
        report_id:
          type: string
          description: Unique identifier for the submitted report
          example: "550e8400-e29b-41d4-a716-446655440000"
        timestamp:
          type: string
          format: date-time
          description: When the report was received
          example: "2024-01-15T10:30:00Z"
      required:
        - message
        - timestamp

    Error:
      type: object
      description: Error response
      properties:
        error:
          type: string
          description: Error message
          example: "Invalid request data"
        code:
          type: string
          description: Error code
          example: "VALIDATION_ERROR"
        details:
          type: object
          description: Additional error details
          additionalProperties: true
          example:
            field: "check_slug"
            reason: "Required field is missing"
      required:
        - error
